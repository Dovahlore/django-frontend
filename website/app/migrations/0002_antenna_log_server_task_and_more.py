# Generated by Django 5.0.3 on 2024-07-05 07:29

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="antenna",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rec_beam", models.IntegerField(default=0)),
                ("available_rec_beam", models.IntegerField(default=0)),
                ("create_time", models.DateTimeField(auto_now_add=True)),
                ("login_time", models.DateTimeField(auto_now=True)),
                ("mapping", models.TextField(default="{}")),
                ("Beam_ava", models.TextField(default="{}")),
            ],
        ),
        migrations.CreateModel(
            name="log",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("type", models.CharField(max_length=32)),
                ("time", models.DateTimeField(auto_now_add=True)),
                ("info", models.TextField(default="{}")),
            ],
        ),
        migrations.CreateModel(
            name="server",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("core", models.IntegerField(default=0)),
                ("GPU", models.IntegerField(default=0)),
                ("available_GPU", models.IntegerField(default=0)),
                ("available_CORE", models.IntegerField(default=0)),
                ("Ip_mapping", models.TextField(default="{}")),
            ],
        ),
        migrations.CreateModel(
            name="task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("task_name", models.CharField(max_length=32)),
                ("beam_type", models.IntegerField(default=0)),
                ("meta_task_num", models.IntegerField(default=0)),
            ],
        ),
        migrations.RenameField(
            model_name="admin",
            old_name="created_at",
            new_name="create_time",
        ),
        migrations.RenameField(
            model_name="admin",
            old_name="user",
            new_name="username",
        ),
        migrations.AddField(
            model_name="admin",
            name="login_time",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name="admin",
            name="id",
            field=models.UUIDField(
                default=uuid.uuid4, editable=False, primary_key=True, serialize=False
            ),
        ),
        migrations.CreateModel(
            name="meta_task",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("meta_task_name", models.CharField(max_length=32)),
                ("core", models.IntegerField(default=0)),
                ("GPU", models.IntegerField(default=0)),
                (
                    "belong_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.task"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="task_list",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("priority", models.IntegerField(default=0)),
                ("starttime", models.DateTimeField(auto_now_add=True)),
                ("endtime", models.DateTimeField(auto_now=True)),
                ("beam", models.IntegerField(default=0)),
                ("status", models.CharField(max_length=32)),
                (
                    "antenna",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.antenna"
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.task"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="meta_task_list",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "meta_task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.meta_task"
                    ),
                ),
                (
                    "server",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.server"
                    ),
                ),
                (
                    "task_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.task_list"
                    ),
                ),
            ],
        ),
    ]
